ir_version: 6
producer_name: "pytorch"
producer_version: "1.5"
graph {
  node {
    input: "input"
    input: "layer1.conv.weight"
    input: "layer1.conv.bias"
    output: "13"
    name: "Conv_0"
    op_type: "Conv"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "group"
      i: 1
      type: INT
    }
    attribute {
      name: "kernel_shape"
      ints: 3
      ints: 3
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
  }
  node {
    input: "13"
    input: "layer1.bn.weight"
    input: "layer1.bn.bias"
    input: "layer1.bn.running_mean"
    input: "layer1.bn.running_var"
    output: "14"
    name: "BatchNormalization_1"
    op_type: "BatchNormalization"
    attribute {
      name: "epsilon"
      f: 9.999999747378752e-06
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.8999999761581421
      type: FLOAT
    }
  }
  node {
    input: "14"
    output: "15"
    name: "Relu_2"
    op_type: "Relu"
  }
  node {
    input: "15"
    input: "bn.weight"
    input: "bn.bias"
    input: "bn.running_mean"
    input: "bn.running_var"
    output: "16"
    name: "BatchNormalization_3"
    op_type: "BatchNormalization"
    attribute {
      name: "epsilon"
      f: 9.999999747378752e-06
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.8999999761581421
      type: FLOAT
    }
  }
  node {
    input: "16"
    input: "15"
    output: "17"
    name: "Add_4"
    op_type: "Add"
  }
  name: "torch-jit-export"
  initializer {
    dims: 16
    data_type: 1
    name: "bn.bias"
    raw_data: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "bn.running_mean"
    raw_data: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "bn.running_var"
    raw_data: "\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "bn.weight"
    raw_data: "\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "layer1.bn.bias"
    raw_data: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "layer1.bn.running_mean"
    raw_data: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "layer1.bn.running_var"
    raw_data: "\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "layer1.bn.weight"
    raw_data: "\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
  }
  initializer {
    dims: 16
    data_type: 1
    name: "layer1.conv.bias"
    raw_data: "\340|\370\274\263\366D\276\210u\326<\00574>\240\247\004<\333\255\034>`4\227\275\205\327\005>\n5\363=x\024\021\275\205p5>\000,Z\271\t\341!\276\362\225\257=\327\034\025>M\302\r\276"
  }
  initializer {
    dims: 16
    dims: 3
    dims: 3
    dims: 3
    data_type: 1
    name: "layer1.conv.weight"
    raw_data: "\213\0047>\333\003\005>\311\367,>\204S\247\275\337\264\030>8\276\017=\212\333\343\275\252\303\t\276\351\0026\276\344lG\275\221\253\253\275\242F\226=\364\035\265\275\224Ub\275.(\300\275f\014\212=\240\204\224<:\340\304=\306\302\342=X[\314<\027\201\035>\220\351\323\274\032\003=\276\330j\002\276\211J\306\275P\023k<\262L\261=\272S\305=\361\000\221\275\223\320\307\275\340\263\324\274\001t\236\275G\362$>\224S\032=2\277\347=\002\263\236\275\333\367\002\276\306\304\317=\250\205\263\274\021\037\t>XL\360\274\316[\372=\031\206\020\276\004Y\014\275?\344\016>\261\037\213\275Pm3=\021\t\251\275\003+\030> \371>\274\316\216\020\276\030v\303\274\246\005\226=\360,\335<\224\226c=`;\316\274\276D\232\275\350\n\270<\220T6\274Fv\010\276\031\016\277\275<\243f\275J\024\035\276\215\2162>\'\230\322\275Pp\030=E\252\025>\3662\273\275\004\200\005\276\240C\366<\352\351\273=@?Q<[X\023\276\244\310\034\276\225):\276d\321-\275\224\002V\275\222R\301=\366\333\257= \023\030<\272\235\334\275\346\236\230=$O:\275,\370\014=\215\267\034>\264\221R=\003\264\032>N\372\250\275\310\254B\275 P\332\274\253|>>^\221\005\276\232\211@\276\000d\313\273\375\306\240\275\275\302\n\276e\2515\276E\t)\276r\325\372=\244\275\006\276\256\366\226==\033>>\374j8\275\207\377\007>\300\357+;zX\001\276\267\271\014>(O\024=\230!\310\274\300L\370;w\0078>l\005\"=0\317\323\275\300\377*\274B\032\304=`\355\027<3\n\'>\034\024^=\020\2350\274\245\271\332\275X\351O=4h\030=\260\r3\275\307\213*>Pc\335\274\272\344\237=\303\3627>\"K\006\276[\2031\276`NY<.A\030\276\336\024\036\276\000\033\216<\272\2376\276\032\340\361=\227o\245\275\177g\227\275PQ\265\275\001(\025\276@\353\374\274\204\217k\275/\376\033>8N_\275\300\001\035\275OL7>(@^\275\326\322\311=\036m\276=\t\307$>\350\031\034\275\300+\335;f\236\343=D\327;=\260\256 =\243\307\025\276\344\0269\275+\354D>Y\346\213\275M\204\005>\302\004\300\275<cB=Xu\377<\200\367\321\274\223w\327\275BU\316\275\300\001h\275\351\352\217\275\0254\002>\255\320\343\275\340\274\205<J\220\225=@\320\350;\351-\244\275\240MK=iC\021>8\330\354\274\216|\224=\t\251\'>PUq<\024\247r=\310\272\336\274(,k\275\334,\300\275\3341v=@\2700\275\000q\214\272\353\226\334\275R\034\310=9\'\226\275\301`D>\020\240_\275L\3267\2752\257\030\2768\263\206\275*\307\254\275\350\337<=\330\007\014\275`S>\274\360\2205\275\3221\251=#\260\r>/-\322\275F\026\242=2\274\200=<\266y=\356\253\352=\262\237\316=\354\260\257\275b\255\032\276\227\243=>9W\022>\236\363\366=(\204\013\275\200\201e\274\2500\257\274o\252\036>\036\277\270=~\311\201=\031\326\027>@0+<\"/ \276r\237\237=\000k\022\272\3401\243;\220\254_=\3505\031=\373( \276\374\'\013\276\303\n\n>\340\316\350\273\200I\206<1Z\254\275\320\205\346<[\004\036>\257m\036\276\200\246\203:d\324.=T\240r=\221\262\036>\312\255\226=\334\001Z\275\200\021\231\274\244k\r\275\341\005\326\275\374\2621=|\270\r\276\2405\343<\360)\247<\264Q#=\302N\243=\206\310\210\275b\340\215\275d;e\275\030\362f=\246\362\341=\000\'\022\276\222\3440\276\214\261k=6}\336=\245\263\340\275C\2047\276\344\355\335\275\216\266\221=\212\346\225=\240\300g\274n\324\211=\344\335]=\255y\021>[y,>^k\314\275 b\321<\227>B>\000\242\263\273\n\301\023\276\030a\307<\374\313~=\033\301\032>M\230\352\275l\206\311\275\032\231\227\275\227\276\000>\241k\004>w\361\363\275\315\022\003>\300\352\003\273\210\256\034\276\310\225-=X\333\235<\342\2463\276\320\3158\276T\004\317\275\267m\256\275\274\323\347\275\000*\214\271\033|<>l\233q\275\312\230\270=\006\272\362=jG$\276\370\227J=V\237\347=\363\336 \276eZ\007>\231\301\030>\260\213\231<\346\205\331=\032T*\276\222/\305=\230C\034\275\331\021\304\275\316\263\213\275 ;}<\336\332\254\275jc/\276\212\370\224=z\205\353=\313\3755>]/\020>\2517\025\276\353\370\034>\212\322\335=\370\030\013\275\267\007\216\275XR\237\274\233\0149>\030\030\270\275@\242\022\275@6<;\330\305H\275x\255>\275T\354\007\276\326\030%\276\262D\327\2752\366\325=@\t\225\273@\263Q<H\347:=\033t:>\251%?\276\034K\006\275\261\321\">\324J\252\275\300&\"\276\236\237\037\276m\342\262\275\270U\300\274\250D\245<Q=\304\275\207R5\276jn\372=\235\204B>VD&\276\000\301\326;\320lg<\0268\312=&9>\276\330\357\025\276\236\\\r\276\321\370\343\275\267\360\244\275\024\302~=\020\212p\275\234zn=\001b\013\276f\216\342=\364\326\210\275\311\3209\276\270E\262<\240}\230\274V\204\301=\214\313\r\275R\233\323=\370\260\203\274\022\242\203=\032\240\324\275`j\317\274\t\\B\276\007\201\345\275\336\203\334\275\2362\223\275\020L\001=\272\277\243=X\245\225\275/X\254\275\371b\004>G\022\002>\342\214:\276)\202\001>\000\232\220;\272\232\354=r\214\357=\251\2429>4c`=\001\223)>\2143N\275X\315\330<V\244\253\275\236I\013\276\000\242\n\276\347\334&>\260)N<\256\217\210=1.@>\340\360S=\336\312\376=\230\345\216<\302\'\303=\350\362E\275[\t\037>P\231\375\274\210\3638=\324\360\016\275\0045*\275\264\355\034\276\232\226\222= \254%\275\234$\026=\355\n\336\275P7\224<!\2027>\246\244\310=\235\217=\276X\330\223<\221\331\352\275\312\240\014\276\231\316D\276Z>\333=\306\014\217=\260\261\027\275\360\024\002=X!\221<\n^\273="
  }
  input {
    name: "input"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  output {
    name: "17"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 16
          }
          dim {
            dim_value: 26
          }
          dim {
            dim_value: 26
          }
        }
      }
    }
  }
}
opset_import {
  version: 9
}
