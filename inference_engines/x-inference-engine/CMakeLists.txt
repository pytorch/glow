cmake_minimum_required(VERSION 3.0)
project(x-infer)

option(LIB_ONLY "Only build the library" OFF)
option(BUILD_FOR_DYNAMIC_LINKAGE "Whether to build for dynamic or static bundle linkage" ON)

set(CMAKE_BINARY_DIR ./bin)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

include_directories(${PROJECT_SOURCE_DIR})

add_library(xinfer STATIC x_inference_lib.c)
if (LIB_ONLY)
    message("Will only build the library")
else()
    message("Will build the library and the executable")
    if (BUILD_FOR_DYNAMIC_LINKAGE)
        message("Will build the executable for dynamic bundle linkage")
        set(OBJS )
        add_definitions(-DX_USE_DYNAMIC)
    else()
        if(NOT DEFINED LINKED_BUNDLE)
            message(FATAL_ERROR "When building with static bundle linkage, bundle must be specified with -DLINKED_BUNDLE=")
        endif()
        if (NOT DEFINED LINKED_MODEL_NAME)
            message(FATAL_ERROR "When building with static bundle linkage, model name must be specified with -DLINKED_MODEL_NAME=")
        endif()

        add_definitions(-DX_MODEL_NAME=${LINKED_MODEL_NAME})
        set(OBJS ${LINKED_BUNDLE})
        set_source_files_properties(${OBJS} PROPERTIES EXTERNAL_OBJECT TRUE GENERATED TRUE)
    endif()
    link_directories(${LIBRARY_OUTPUT_PATH})
    add_executable(x-infer main.c ${OBJS})
    target_link_libraries(x-infer xinfer.a dl)
endif()